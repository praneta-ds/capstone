trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'cefbfb7c-e78a-47f1-bb76-ba28dbfd2550'
  imageRepository: 'capstone'
  containerRegistry: 'ecomacr598.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'ecomacr59808ca-auth'

stages:
- stage: Build
  displayName: Build, Test, Analyze and Push Stage
  jobs:
  - job: BuildAndAnalyze
    displayName: Build, Test, SonarCloud Analysis, and Push Image
    pool:
      name: ss-vm-agent-pool

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.10'
      displayName: 'Set Python Version'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
      displayName: 'Install Dependencies and Test Tools'

    - script: |
        pytest --cov=. --cov-report=xml
      displayName: 'Run Tests and Generate Coverage Report'

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonar-capstone'  # Update to match your actual SonarCloud service connection
        organization: 'devuser130746'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'capstone'
        cliProjectName: 'capstone'
        cliSources: '.'
        extraProperties: |
          sonar.python.coverage.reportPaths=coverage.xml
      displayName: 'Prepare SonarCloud Analysis'

    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud Analysis'

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish SonarCloud Quality Gate Result'

    - task: Docker@2
      displayName: 'Build and Push Image to ACR'
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - publish: $(Pipeline.Workspace)/manifests
      artifact: manifests
      displayName: 'Publish Kubernetes Manifests'

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    pool:
      name: 'ss-vm-agent-pool'
    environment: 'capstone-1311.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: 'Create imagePullSecret'
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: 'Deploy Kubernetes Manifests'
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
