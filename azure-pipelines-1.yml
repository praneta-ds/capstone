# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# cd-pipeline.yml
trigger: none  # No GitHub trigger directly

resources:
  pipelines:
    - pipeline: ciPipeline                # Alias for CI
      source: ci-pipeline                 # CI pipeline name in Azure DevOps
      trigger:
        branches:
          include:
            - main

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '9136b54f-ba16-4511-bc18-545b0449d565'
  imageRepository: 'ssethumadavecommerce'
  containerRegistry: 'ecomacr598.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'ecomacr598330c-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:

- stage: Deploy
  displayName: Deploy stage
  dependsOn: []
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: ss-vm-agent-pool
    environment: 'ssethumadavEcommerce.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: ciPipeline
            artifact: drop
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                k8s/app-deployment.yaml
                k8s/app-service.yaml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

